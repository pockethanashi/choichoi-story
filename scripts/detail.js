document.addEventListener("DOMContentLoaded", fetchStoryDetail);

const API_URL = "https://script.google.com/macros/s/AKfycbxon-diIi46egMwU4fGxUUm3-B9cCSMUon4i1JFvAZSgZwz8G8WshhLh7tRlrHj5maxyg/exec";

let allVersions = []; // Âêå„ÅòoriginalId„ÇíÊåÅ„Å§„Éê„Éº„Ç∏„Éß„É≥ÈÅï„ÅÑ„ÇíÊ†ºÁ¥ç

// üîπ URL„Åã„ÇâidÔºàoriginalIdÔºâ„ÇíÂèñÂæó
function getStoryIdFromURL() {
    const params = new URLSearchParams(window.location.search);
    return params.get("id");
}

function fetchStoryDetail() {
    const originalId = getStoryIdFromURL();
    if (!originalId) {
        console.error("‚ùå ‰ΩúÂìÅID„ÅåÊåáÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì");
        return;
    }

    fetch(`${API_URL}?action=get`)
        .then(response => response.json())
        .then(data => {
            // originalId „Åå‰∏ÄËá¥„Åô„Çã„Åô„Åπ„Å¶„ÅÆ„Éê„Éº„Ç∏„Éß„É≥„ÇíÊäΩÂá∫
            allVersions = data.filter(s => s.originalId === originalId);

            if (allVersions.length === 0) {
                console.error("‚ùå Ë©≤ÂΩì„Åô„Çã‰ΩúÂìÅ„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì");
                return;
            }

            // üîΩ „Éê„Éº„Ç∏„Éß„É≥„ÅÆÊñ∞„Åó„Åï„Åß„ÇΩ„Éº„ÉàÔºàÊõ¥Êñ∞Êó•ÔºÜ„Éê„Éº„Ç∏„Éß„É≥Áï™Âè∑Ôºâ
            allVersions.sort((a, b) => {
                const dateA = new Date(a.updateDate || "1900-01-01");
                const dateB = new Date(b.updateDate || "1900-01-01");
                const versionA = parseFloat(a.version || "0");
                const versionB = parseFloat(b.version || "0");

                if (dateA < dateB) return 1;
                if (dateA > dateB) return -1;
                return versionB - versionA;
            });

            populateVersionSelector();
            displayStory(allVersions[0]); // ÊúÄÊñ∞„Éê„Éº„Ç∏„Éß„É≥„ÇíË°®Á§∫
        })
        .catch(error => console.error("‚ùå „Éá„Éº„ÇøÂèñÂæó„Ç®„É©„Éº:", error));
}

function populateVersionSelector() {
    const select = document.getElementById("version-select");
    if (!select) return;

    select.innerHTML = "";

    allVersions.forEach((story, index) => {
        const option = document.createElement("option");
        option.value = index;

        const versionLabel = story.version ? `v${story.version}` : "„Éê„Éº„Ç∏„Éß„É≥„Å™„Åó";
        const memo = story.updateMemo || "„É°„É¢„Å™„Åó";

        option.textContent = `${versionLabel}Ôºà${memo}Ôºâ`;
        select.appendChild(option);
    });

    select.addEventListener("change", (e) => {
        const selected = parseInt(e.target.value);
        displayStory(allVersions[selected]);
    });
}

function displayStory(story) {
  document.getElementById("story-title").textContent = story.title;
  document.getElementById("story-body").innerHTML = story.body.replace(/\n/g, "<br>");
  document.getElementById("story-genre").textContent = story.genre;
  document.getElementById("story-author").textContent = story.author || "‰∏çÊòé";
  document.getElementById("story-likes").textContent = story.likes;
  document.getElementById("story-version").textContent = story.version || "„Å™„Åó";
  document.getElementById("story-updateDate").textContent = story.updateDate || "‰∏çÊòé";
  document.getElementById("story-updateMemo").textContent = story.updateMemo || "„Å™„Åó";
  document.getElementById("story-originalAuthor").textContent =
  findOriginalAuthor(allVersions, story.originalId);

  document.title = `${story.title} `;


  const profileBtn = document.querySelector(".profile-btn");
  if (profileBtn) {
    profileBtn.onclick = () => showProfile(story.author, story.profile);
  }

  // üîπ „Äå„ÅÑ„ÅÑ„Å≠„Äç„Éú„Çø„É≥„ÅÆÊåôÂãï„ÇíË®≠ÂÆö
  const likeButton = document.querySelector("button[onclick^='likeStory']");
  if (likeButton) {
    likeButton.onclick = () => likeStory(story.originalId, story.version);
  }
}


function likeStory(originalId, version) {
  fetch(API_URL, {
    method: "POST",
    mode: "no-cors",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ originalId, version })
  });
  alert(`„Åì„ÅÆ„Éê„Éº„Ç∏„Éß„É≥ÔºàID: ${originalId}, v${version}Ôºâ„Å´„ÅÑ„ÅÑ„Å≠„Åó„Åæ„Åó„ÅüÔºÅ`);
}


function showProfile(author, profile) {
    const modal = document.getElementById("profile-modal");
    const profileTitle = document.getElementById("profile-title");
    const profileText = document.getElementById("profile-text");

    profileTitle.innerText = `‰ΩúËÄÖ: ${author}`;
    profileText.innerText = profile;

    modal.style.display = "block";

    document.querySelector(".close").addEventListener("click", () => {
        modal.style.display = "none";
    });

    window.addEventListener("click", (event) => {
        if (event.target === modal) {
            modal.style.display = "none";
        }
    });
}


function findOriginalAuthor(data, originalId) {
  const normalizedId = (originalId || "").trim().toLowerCase();

  // originalId „Åå‰∏ÄËá¥„Åô„ÇãÂÄôË£ú„Çí„Åô„Åπ„Å¶ÂèñÂæó
  const candidates = data.filter(s =>
    (s.originalId || "").trim().toLowerCase() === normalizedId
  );

  if (candidates.length === 0) return "‰∏çÊòé";

  // Êõ¥Êñ∞Êó•‚Üí„Éê„Éº„Ç∏„Éß„É≥Áï™Âè∑„ÅÆÈ†Ü„Å´ÊòáÈ†Ü„ÇΩ„Éº„ÉàÔºàÊúÄÂàù„ÅÆ‰ΩúËÄÖ„Åå„Ç™„É™„Ç∏„Éä„É´„Å®„Åø„Å™„ÅôÔºâ
  candidates.sort((a, b) => {
    const dateA = new Date(a.updateDate || "9999-12-31");
    const dateB = new Date(b.updateDate || "9999-12-31");
    if (dateA < dateB) return -1;
    if (dateA > dateB) return 1;

    const verA = parseFloat(a.version || "0");
    const verB = parseFloat(b.version || "0");
    return verA - verB;
  });

  return candidates[0].author || "‰∏çÊòé";
}


